name: build
on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  pull_request:
env:
  KUBE_BUILDER_VERSION: "2.3.2"
  OPERATOR_SDK_VERSION: "v1.4.2"
jobs:
  build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/cache@v2.1.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'

      - name: Setup env
        run: |
          sudo curl -Lo- https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${KUBE_BUILDER_VERSION}/kubebuilder_${KUBE_BUILDER_VERSION}_linux_amd64.tar.gz | tar xzv -C /tmp -f -
          echo "KUBEBUILDER_ASSETS=/tmp/kubebuilder_${KUBE_BUILDER_VERSION}_linux_amd64/bin" >> $GITHUB_ENV

      - name: Test and build image
        run: |
          make test docker-build

      - uses: codecov/codecov-action@v1

      - name: Push to GitHub Packages
        run: |
          echo "${{ secrets.GHCR_PAT }}" | docker login https://ghcr.io -u ${GITHUB_ACTOR} --password-stdin
          make docker-push-ghcr

  e2e:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        k8s: [ "v1.16.15", "v1.20.2" ]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/cache@v2.1.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.1.0
        with:
          node_image: kindest/node:${{ matrix.k8s }}

      - name: e2e test
        run: |
          # https://github.com/kubernetes-sigs/kustomize/issues/2867
          kustomize version
          sudo rm $(which kustomize)

          kubectl get nodes -o wide

          make load-kind-image install deploy

          sleep 10s
          kubectl -n garo-system describe pod
          make uninstall

  publish:
    needs: e2e
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: bundle
        run: |
          sudo curl -Lo /usr/local/bin/operator-sdk https://github.com/operator-framework/operator-sdk/releases/download/${OPERATOR_SDK_VERSION}/operator-sdk_linux_amd64
          sudo chmod a+x /usr/local/bin/operator-sdk
          make bundle bundle-build

      - name: Login to Quay
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
        uses: azure/docker-login@v1
        with:
          login-server: 'quay.io'
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Publish to Registry
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
        run: |
          make docker-push
